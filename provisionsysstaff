#! /usr/bin/env bash

# Print some info if the user uses "-h" in their command
usage()
{
cat <<EOF

Usage:
    ./provisionsysstaff

    -h     Show the Help menu for provisionsysstaff

    Description:
    This tool is designed to fully provision a machine for use at
    the lcsee systems office. It is written to remote connect to
    the machine and provision it with Ansible using our playbooks.
    This script makes use of Zenity for most of its user interaction.
    
EOF
}

# Print help if -h specified
[ "${1}" == "-h" ] && usage && exit 0

########################################
# Checking to see if the user has their ssh keys loaded
if [ "$(ssh-add -L | grep "The agent has no identities.")" == "The agent has no identities." ]; then
    echo "Your SSH keys appear to not be loaded. Please load them before running this script."
else
#########################################

#########################################
# Getting the name of the machine that the user would like to provision
machine_name=$(zenity --entry --title "Ansible Provisioning?" --text="Enter an IP that you would like to provision" --entry-text "IP Address")
tput setaf 3;echo "Provisioning the machine of your choice"; tput sgr0
#########################################

#########################################
# Warning the user that they need to have the name of the machine that they wish to provision in their /etc/ansible/hosts file
zenity --warning --title "Make sure you add this line!" --text 'echo "machinename ansible_connection=ssh" > /etc/ansible/hosts '
#########################################

########################################
# Removing the host keys warning
ssh-keygen -f "/home/cumorris/.ssh/known_hosts" -R ${machine_name}
#########################################

#########################################
# Getting the loud-ubuntu-ansible playbooks from webgit and running them on the machine that is being provisioned
cd /tmp
git archive --remote git@webgit.lcseecloud.net:ubuntu/loud-ubuntu-ansible.git --format tar --prefix=loud-ubuntu-ansible/ master | sudo tar xvf -
cd /tmp/loud-ubuntu-ansible
sudo sed -i "s/localhost/${machine_name}/g" loudify.yml
ansible-playbook -vvvv loudify.yml
tput setaf 2;echo "The machine has been provisioned with loud"; tput sgr0
echo " " 
##########################################

##########################################
# Getting the playbook for lcsee-ubuntu-ansible and running that on the machine that is being provisioned
cd /tmp
git archive --remote git@webgit.lcseecloud.net:ubuntu/lcsee-ubuntu-ansible.git --format tar --prefix=lcsee-ubuntu-ansible/ master | sudo tar xvf -
cd /tmp/lcsee-ubuntu-ansible
sudo sed -i "s/localhost/${machine_name}/g" lcsee-sysstaff.yml
ansible-playbook -vvvv lcsee-sysstaff.yml
tput setaf 2;echo "The machine has been provisioned with lcsee"; tput sgr0
echo " " 
##########################################

#########################################
# Rebooting the machine so the playbooks can take effect
tput setaf 3;echo "restarting machine"; tput sgr0
ssh -A -o stricthostkeychecking=no cumorris@$machine_name 'sudo reboot'

RESULT_4=$?
if [ $RESULT_4 -eq 1 ]; then
    tput setaf 1;echo "unable to reboot the machine - Something in the lcsee or loud playbooks may have broke this"; tput sgr0
    tput setaf 1;echo "I cannot continue, you're on your own br0"; tput sgr0
    echo " "
    exit
    
else
    tput setaf 2;echo "Machine reboot complete";tput sgr0
    
fi

tput setaf 2;echo "Provisioning complete"; tput sgr0
exit
#########################################

# Ending "fi" from the ssh-keys if statement
fi
