#! /usr/bin/env bash

# CONSTANTS
CDHOME='cd'
CD_SSH="cd /media/${USER}/${USER}/.ssh"
CD_MEDIA="cd /media/${USER}/${USER}"
GET_LCSEE_SCRIPTS='git clone https://github.com/camarox53/lcsee-scripts'
GET_SCRIPTS='git clone https://github.com/camarox53/scripts'
GET_BUILD_MEDIA='git clone https://github.com/camarox53/build-media'
RM_LCSEE='rm -rf LCSEE-scripts'
RM_SCRIPTS='rm -rf scripts'
RM_BUILD_MEDIA='rm -rf build-media'
CP_BASHRC='cp .bashrc ~/'
STARTUP='./startup-run'
HOST_STATUS='$(ssh -A nagios001 sudo nagios3stats | grep "Hosts Up/Down/Unreach:")'
HOSTS_DOWN='$(ssh -A nagios001 sudo nagios3stats | grep "Hosts Up/Down/Unreach:" | cut -d/ -f4)'
SSH_AUTH='$(env |grep -i ssh | grep "SSH_AUTH_SOCK" | cut -d= -f2)'

# method to get lcsee-scripts
get_lcsee-scripts(){
    $CDHOME
    $GET_LCSEE_SCRIPTS
    $CDHOME
}

# method to get scripts
get_scripts(){
    $CDHOME
    $GET_SCRIPTS
    $CDHOME    
}

# method to get build media
get_build-media(){
    $CDHOME
    $GET_BUILD_MEDIA
    $CDHOME
}
# method to remove lcsee-scripts
remove_lcsee-scripts(){
    $CDHOME
    $RM_LCSEE
    $CDHOME
}

# method to remove scripts
remove_scripts(){
    $CDHOME
    $RM_SCRIPTS
    $CDHOME
}

# method to remove build-media
remove_build-media(){
    $CDHOME
    $RM_BUILD_MEDIA
    $CDHOME
}

# method to add SSH keys
add_ssh_keys(){
    # Make this use zenity to get password
    $CD_SSH
    if [ -f identity ]; then
	ssh-add identity
    else
	echo "Your identity file could not be located"
    fi 
    $CDHOME
}

setup_cron(){
# Move this code to constants after getting it to work     
echo "* * * * * export DISPLAY=:0 && export SSH_AUTH_SOCK=$SSH_AUTH && ~/lcsee-scripts/nagios-check" >> ~/mycron
# Add code to remove existing cron if I can get this working
crontab -l > ~/mycron
crontab ~/mycron
}

# method to check server nagios
check_nagios001(){
    $CDHOME
    if [ "$HOSTS_DOWN" != 0 ]; then
	notify-send "Nagios001 Server Hosts down:" `ssh -A -o stricthostkeychecking=no nagios001 sudo nagios3stats | grep "Hosts Up/Down/Unreach:" | cut -d/ -f4`
	notify-send "Nagios001 Machines in Downtime:" `ssh -A -o stricthostkeychecking=no nagios001 sudo nagios3stats | grep "Hosts In Downtime:"| cut -d: -f2`
    fi
    $CDHOME
}

# method to cp .bashrc into place
copy_bashrc(){
    $CD_MEDIA
    if [ -f .bashrc ]; then 
	$CP_BASHRC
    else
	echo ".bashrc could not be located on USB"
    fi
    $CDHOME
}

# method to add scripts to my G keys LOL
configure_gkeys(){
    $CDHOME
    $CDHOME
}

startup_run(){
    $CD_MEDIA
    if [ -f startup-run ]; then
	$STARTUP
    else
	echo "Startup file could not be located on USB"
    fi 
    $CDHOME
}


################# NOTES ################
## http://superuser.com/questions/342107/getting-macro-keys-from-a-razer-blackwidow-to-work-on-linux
####################################### #


# Checking to see if your USB is mounted, if not she wont run br0
if [ ! -d  /media/${USER}/${USER} ]; then
    zenity --warning --text "Plug in your USB br0" --title "NO USB FOUND :("
else
    
#######################################################################
echo " "
tput setaf 4;echo "########################################"; tput sgr0
tput setaf 3;echo "Checking your SSH Keys"; tput sgr0
if [ "$(ssh-add -L | grep "The agent has no identities.")" == "The agent has no identities." ]; then
    add_ssh_keys
       if [ $? == 1 ]; then
	   echo "ssh-add failed to add your SSH keys correctly - check permissions"
       fi
fi
tput setaf 2;echo "SSH Keys have been loaded"; tput sgr0
tput setaf 4;echo "########################################"; tput sgr0
echo " "
#######################################################################
echo " "
tput setaf 4;echo "########################################"; tput sgr0
tput setaf 3;echo "Checking Nagios001"; tput sgr0
if [ "${USER}" == "cumorris" ]; then
    check_nagios001
fi
tput setaf 2;echo "Nagios001 Check Complete"; tput sgr0
tput setaf 4;echo "########################################"; tput sgr0
echo " "
#######################################################################
echo " "
tput setaf 4;echo "########################################"; tput sgr0
tput setaf 3;echo "Copying .bashrc into place"; tput sgr0
copy_bashrc
tput setaf 2;echo "Bashrc put into place"; tput sgr0
tput setaf 4;echo "########################################"; tput sgr0
echo " "
#######################################################################
echo " "
tput setaf 4;echo "########################################"; tput sgr0
tput setaf 3;echo "Getting lcsee-scripts"; tput sgr0
remove_lcsee-scripts
get_lcsee-scripts
tput setaf 2;echo "lcsee-scripts downloaded"; tput sgr0
tput setaf 4;echo "########################################"; tput sgr0
echo " "
#######################################################################
echo " "
tput setaf 4;echo "########################################"; tput sgr0
tput setaf 3;echo "Getting build-media for cumorris"; tput sgr0
if [ "${USER}" == "cumorris" ]; then
    remove_build-media
    get_build-media
fi
tput setaf 2;echo "Build-media downloaded"; tput sgr0
tput setaf 4;echo "########################################"; tput sgr0
echo " "
########################################################################
echo " "
tput setaf 4;echo "########################################"; tput sgr0
tput setaf 3;echo "Getting scripts for cumorris"; tput sgr0
if [ "${USER}" == "cumorris" ]; then
    remove_scripts
    get_scripts
fi
tput setaf 2;echo "Scripts downloaded"; tput sgr0
tput setaf 4;echo "########################################"; tput sgr0
echo " "
########################################################################
echo " "
tput setaf 4;echo "########################################"; tput sgr0
tput setaf 3;echo "Starting cron job"; tput sgr0
setup_cron
tput setaf 2;echo "Cron job started"; tput sgr0
tput setaf 4;echo "########################################"; tput sgr0
echo " "
########################################################################
echo " "
tput setaf 4;echo "########################################"; tput sgr0
tput setaf 3;echo "Starting Control Center"; tput sgr0
ruby ~/lcsee-scripts/systems-hud &
tput setaf 2;echo "Control Center Started"; tput sgr0
tput setaf 4;echo "########################################"; tput sgr0
echo " "
########################################################################
echo " "
tput setaf 4;echo "########################################"; tput sgr0
tput setaf 3;echo "Calling your usb startup script"; tput sgr0
startup_run
tput setaf 2;echo "Running your usb startup script"; tput sgr0
tput setaf 4;echo "########################################"; tput sgr0
echo " "
########################################################################


# Ending the if statement from the usb check. 
fi

