#! /usr/bin/env bash

# CONSTANTS
CDHOME='cd'
CD_SSH="cd /media/${USER}/${USER}/.ssh"
CD_MEDIA="cd /media/${USER}/${USER}"
GET_LCSEE_SCRIPTS='git clone https://github.com/camarox53/LCSEE-scripts'
GET_SCRIPTS='git clone https://github.com/camarox53/scripts'
GET_BUILD_MEDIA='git clone https://github.com/camarox53/build-media'
RM_LCSEE='rm -rf LCSEE-scripts'
RM_SCRIPTS='rm -rf scripts'
RM_BUILD_MEDIA='rm -rf build-media'

# method to get lcsee-scripts
get_lcsee-scripts(){
    $CDHOME
    $GET_LCSEE_SCRIPTS
    $CDHOME
}

# method to get scripts
get_scripts(){
    $CDHOME
    $GET_SCRIPTS
    $CDHOME    
}

# method to get build media
get_build-media(){
    $CDHOME
    $GET_BUILD_MEDIA
    $CDHOME
}
# method to remove lcsee-scripts
remove_lcsee-scripts(){
    $CDHOME
    $RM_LCSEE
    $CDHOME
}

# method to remove scripts
remove_scripts(){
    $CDHOME
    $RM_SCRIPTS
    $CDHOME
}

# method to remove build-media
remove_build-media(){
    $CDHOME
    $RM_BUILD_MEDIA
    $CDHOME
}

# method to add SSH keys
add_ssh_keys(){
    # Make this use zenity to get password
    $CD_SSH
    ssh-add identity
    $CDHOME
}

setup_cron(){
SSH_AUTH=$(env |grep -i ssh | grep "SSH_AUTH_SOCK" | cut -d= -f2)
echo "* * * * * export DISPLAY=:0 && export SSH_AUTH_SOCK=$SSH_AUTH && ~/lcsee-scripts/nagios-check" >> ~/mycron
crontab -l > ~/mycron
crontab ~/mycron
}

# method to check server nagios
check_nagios001(){
    $CDHOME
    HOST_STATUS='$(ssh -A nagios001 sudo nagios3stats | grep "Hosts Up/Down/Unreach:")'
    HOSTS_DOWN='$(ssh -A nagios001 sudo nagios3stats | grep "Hosts Up/Down/Unreach:" | cut -d/ -f4)'
    #HOST_DOWN='$(ssh -A nagios001 sudo nagios3stats | grep "Hosts In Downtime:")'
    if [ "$HOSTS_DOWN" != 0 ]; then
	notify-send "Nagios001 Server Hosts down:" `ssh -A nagios001 sudo nagios3stats | grep "Hosts Up/Down/Unreach:" | cut -d/ -f4`
	notify-send "Nagios001 Machines in Downtime:" `ssh -A nagios001 sudo nagios3stats | grep "Hosts In Downtime:"| cut -d: -f2`
    fi
    $CDHOME
}

# method to cp .bashrc into place
copy_bashrc(){
    $CD_MEDIA
    cp .bashrc ~/
    $CDHOME
}

# method to add scripts to my G keys LOL
configure_gkeys(){
    $CDHOME
    $CDHOME
}

startup_run(){
    . /media/${USER}/${USER}/startup-run
}

################# NOTES ################
## http://superuser.com/questions/342107/getting-macro-keys-from-a-razer-blackwidow-to-work-on-linux


# have a check that makes sure your usb is there before running some methods
########################################


# Check to see if SSH Keys have been loaded
if [ "$(ssh-add -L | grep "The agent has no identities.")" == "The agent has no identities." ]; then
    add_ssh_keys
fi

#######################################################################
echo " "
tput setaf 4;echo "########################################"; tput sgr0
tput setaf 3;echo "Checking Nagios001"; tput sgr0
check_nagios001
tput setaf 2;echo "Nagios001 Check Complete"; tput sgr0
tput setaf 4;echo "########################################"; tput sgr0
echo " "
#######################################################################
echo " "
tput setaf 4;echo "########################################"; tput sgr0
tput setaf 3;echo "Copying .bashrc into place"; tput sgr0
copy_bashrc
tput setaf 2;echo "Bashrc put into place"; tput sgr0
tput setaf 4;echo "########################################"; tput sgr0
echo " "
#######################################################################
echo " "
tput setaf 4;echo "########################################"; tput sgr0
tput setaf 3;echo "Getting lcsee-scripts"; tput sgr0
remove_lcsee-scripts
get_lcsee-scripts
tput setaf 2;echo "lcsee-scripts downloaded"; tput sgr0
tput setaf 4;echo "########################################"; tput sgr0
echo " "
#######################################################################
echo " "
tput setaf 4;echo "########################################"; tput sgr0
tput setaf 3;echo "Getting build-media for cumorris"; tput sgr0
if [ "${USER}" == "cumorris" ]; then
    remove_build-media
    get_build-media
fi
tput setaf 2;echo "Build-media downloaded"; tput sgr0
tput setaf 4;echo "########################################"; tput sgr0
echo " "
########################################################################
echo " "
tput setaf 4;echo "########################################"; tput sgr0
tput setaf 3;echo "Getting scripts for cumorris"; tput sgr0
if [ "${USER}" == "cumorris" ]; then
    # remove_scripts
    echo "Coming Soon" 
    # get_scripts
fi
tput setaf 2;echo "Scripts downloaded"; tput sgr0
tput setaf 4;echo "########################################"; tput sgr0
echo " "
########################################################################
echo " "
tput setaf 4;echo "########################################"; tput sgr0
tput setaf 3;echo "Starting cron job"; tput sgr0
setup_cron
tput setaf 2;echo "Cron job started"; tput sgr0
tput setaf 4;echo "########################################"; tput sgr0
echo " "
########################################################################
echo " "
tput setaf 4;echo "########################################"; tput sgr0
tput setaf 3;echo "Starting Control Center"; tput sgr0
ruby ~/lcsee-scripts/systems-hud &
tput setaf 2;echo "Control Center Started"; tput sgr0
tput setaf 4;echo "########################################"; tput sgr0
echo " "
########################################################################
echo " "
tput setaf 4;echo "########################################"; tput sgr0
tput setaf 3;echo "Calling your usb startup script"; tput sgr0
startup_run
tput setaf 2;echo "Running your usb startup script"; tput sgr0
tput setaf 4;echo "########################################"; tput sgr0
echo " "
########################################################################
